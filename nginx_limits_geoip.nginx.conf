## Please, do not forget to add/update GeoIP database previously:
#
## Download database if it has been updated:
# wget -N http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz
#
## Unpack database:
# gunzip GeoIP.dat.gz
#
## Add database:
# mkdir -p /usr/share/GeoIP
# mv -f GeoIP.dat /usr/share/GeoIP/
#
## Copyright (C) 2019  DiMoNlCool
#

load_module "modules/ngx_http_geoip_module.so"; # enables GeoIP module, so comment out if already enabled

events {

		# your events options here

}

http {

      # your http options here

      geoip_country /usr/share/GeoIP/GeoIP.dat; # define the country IP database

      geo $limit_type_ip {
          127.0.0.1             u;  # localhost
          111.222.123.123       u;  # Your company's office external IP-address as an exception
          default               "";
      }

      map $geoip_country_code $limit_type_country {
          DE        u; # unlimited for Germany, for other countries see: https://dev.maxmind.com/geoip/legacy/codes/iso3166/
          default   l; # limited for all countries except for defined above
      }

      map $limit_type_ip $limit_type {
          ""      $limit_type_country;
          default $limit_type_ip;
      }

      map $limit_type $limit_range {
          u       "";                  # u: unlimited
          l       $binary_remote_addr; # l: limited
          default $binary_remote_addr;
      }

      limit_req_zone      $limit_range      zone=project-req:10m            rate=5r/s;
      limit_conn_zone     $limit_range      zone=project-conn:10m;

      server {

             # your server options here

             location / {
                      deny  111.111.222.222; # example of IP which DOS-attack came from, denied
                      # other denied addresses or networks (such as 10.0.0.0/8 or 192.168.0.0/24) here

                      limit_req zone=project-req burst=10 nodelay;
                      limit_conn project-conn 30; # connection limit per one IP

                      limit_req_log_level warn; # limits on warn level at logs
                      limit_conn_log_level warn; # limits on warn level at logs

                      limit_req_status 429; # "Too Many Requests" HTTP status code
                      limit_conn_status 429; # "Too Many Requests" HTTP status code

                      # further processing for current location here
            }
      }
}
